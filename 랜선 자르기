#include <stdio.h>
#include <iostream>
#include <vector>
#include <algorithm>
#include <limits.h>
 
using namespace std;
 
long long k, n;
vector<long long> v;
long long arr[100000];
 
long long sum(long long k)
{
    if (k == 0)
        return arr[0];
    else
        return arr[k] + sum(k - 1);
}
 
bool possible(long long mid)
{
    for (int i = 0;i <= k - 1;i++)
    {
        arr[i] = v[i] / mid;
    }
    if (sum(k) >= n)
        return true;
    else
        return false;
}
 
long long binarysearch()
{
    long long low = 0;
    long long high = LLONG_MAX;
    long long mid;
    for (int i = 1;i <= 100;i++)
    {
        mid = (low + high) / 2;
        if (possible(mid))
            low = mid;
        else
            high = mid;
    }
    return low;
}
 
int main()
{
    cin >> k >> n;
    v.resize(k);
    for (int i = 0;i <= k - 1;i++)
    {
        cin >> v[i];
    }
    sort(v.begin(), v.end());
    cout << binarysearch();
 
    return 0;
}
